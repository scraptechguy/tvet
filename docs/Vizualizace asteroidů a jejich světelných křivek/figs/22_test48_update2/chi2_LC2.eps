%!PS-Adobe-2.0 EPSF-2.0
%%Title: chi2_LC2.eps
%%Creator: gnuplot 5.4 patchlevel 1
%%CreationDate: Tue Jan 23 19:04:26 2024
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 356 201
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -60 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 356 50 lineto 356 201 lineto 50 201 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.2 (Dec 2017)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto closepath gsave fill grestore stroke} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/Metrics {ExtendTextBox Gswidth} def
/Lwidth {currentpoint stroke M 0 vshift R Metrics} def
/Rwidth {currentpoint stroke M dup stringwidth pop neg vshift R Metrics} def
/Cwidth {currentpoint stroke M dup stringwidth pop -2 div vshift R Metrics} def
/GLwidth {currentpoint stroke M 0 vshift R {ExtendTextBox} forall} def
/GRwidth {currentpoint stroke M dup Gwidth vshift R {ExtendTextBox} forall} def
/GCwidth {currentpoint stroke M dup Gwidth 2 div vshift R {ExtendTextBox} forall} def
/GLwidth2 {0 Gwidth AddGlyphWidth} def
/GRwidth2 {Gwidth -1 mul 0 AddGlyphWidth} def
/GCwidth2 {Gwidth 2 div dup -1 mul AddGlyphWidth} def
/AddGlyphWidth { dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
                 dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse } def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {Metrics pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get Gswidth pop -2 div
     dup 0 R} {dup 6 get Gswidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (chi2_LC2.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.4 patchlevel 1)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Jan 23 19:04:26 2024)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt Sep 2016
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { dup type /stringtype eq
    { Boxing { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if }
    {} ifelse} def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 180 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 6120.00 3024.00 BoxColFill} if
gsave % colour palette begin
/maxcolors 0 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .5 1 ] def
/RedA [0 0 0 ] def
/GreenA [0 .502 1 ] def
/BlueA [1 1 1 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
LCb setrgbcolor
702 2915 M
63 0 V
4478 0 R
-63 0 V
stroke
594 2915 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 9.4)]
] -60.0 MRshow
/Helvetica findfont 180 scalefont setfont
/vshift -60 def
1.000 UL
LTb
LCb setrgbcolor
702 2519 M
63 0 V
4478 0 R
-63 0 V
stroke
594 2519 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 9.6)]
] -60.0 MRshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
702 2123 M
63 0 V
4478 0 R
-63 0 V
stroke
594 2123 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 9.8)]
] -60.0 MRshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
702 1728 M
63 0 V
4478 0 R
-63 0 V
stroke
594 1728 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 10)]
] -60.0 MRshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
702 1332 M
63 0 V
4478 0 R
-63 0 V
stroke
594 1332 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 10.2)]
] -60.0 MRshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
702 936 M
63 0 V
4478 0 R
-63 0 V
stroke
594 936 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 10.4)]
] -60.0 MRshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
702 540 M
63 0 V
4478 0 R
-63 0 V
stroke
594 540 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 10.6)]
] -60.0 MRshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
702 540 M
0 63 V
0 2312 R
0 -63 V
stroke
702 360 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0)]
] -60.0 MCshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1351 540 M
0 63 V
0 2312 R
0 -63 V
stroke
1351 360 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.05)]
] -60.0 MCshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1999 540 M
0 63 V
0 2312 R
0 -63 V
stroke
1999 360 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.1)]
] -60.0 MCshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
2648 540 M
0 63 V
0 2312 R
0 -63 V
stroke
2648 360 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.15)]
] -60.0 MCshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
3297 540 M
0 63 V
0 2312 R
0 -63 V
stroke
3297 360 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.2)]
] -60.0 MCshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
3946 540 M
0 63 V
0 2312 R
0 -63 V
stroke
3946 360 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.25)]
] -60.0 MCshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
4594 540 M
0 63 V
0 2312 R
0 -63 V
stroke
4594 360 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.3)]
] -60.0 MCshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
5243 540 M
0 63 V
0 2312 R
0 -63 V
stroke
5243 360 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.35)]
] -60.0 MCshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
702 2915 N
702 540 L
4541 0 V
0 2375 V
-4541 0 V
Z stroke
1.000 UP
1.000 UL
LTa
LCa setrgbcolor
703 1729 M
4541 0 V
stroke
LTa
LCa setrgbcolor
2945 541 M
0 2375 V
stroke
LTb
LCb setrgbcolor
LCb setrgbcolor
99 1727 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica-Oblique) 180.0 0.0 true true 0 (R)]
[(Helvetica) 144.0 -54.0 true true 0 (c)]
[(Helvetica) 180.0 0.0 true true 0 ( [mag])]
] -42.0 MCshow
grestore
/Helvetica findfont 180 scalefont setfont
LTb
LCb setrgbcolor
2972 90 M
[ [(Helvetica) 180.0 0.0 true true 0 (JD )]
[(Symbol) 180.0 0.0 true true 0 (-)]
[(Helvetica) 180.0 0.0 true true 0 ( 2459546.692103)]
] -60.0 MCshow
/Helvetica findfont 180 scalefont setfont
LTb
% Begin plot #1
1.000 UP
2.500 UL
LTb
0 g .0078 g 737 1927 M
.0156 g 737 1927 M
35 38 V
.0234 g 772 1965 M
35 14 V
.0312 g 807 1979 M
35 1 V
.0391 g 842 1980 M
35 3 V
.0469 g 877 1983 M
35 32 V
.0547 g 912 2015 M
35 42 V
.0625 g 947 2057 M
35 69 V
.0703 g 982 2126 M
35 58 V
.0781 g 1017 2184 M
35 45 V
.0859 g 1052 2229 M
35 8 V
.0937 g 1087 2237 M
35 -19 V
.1016 g 1122 2218 M
36 -38 V
.1094 g 1158 2180 M
35 -69 V
.1172 g 1193 2111 M
35 -90 V
.125 g 1228 2021 M
35 -117 V
.1328 g 1263 1904 M
35 -128 V
.1406 g 1298 1776 M
35 -127 V
.1484 g 1333 1649 M
35 -109 V
.1563 g 1368 1540 M
35 -96 V
.1641 g 1403 1444 M
35 -83 V
.1719 g 1438 1361 M
35 -65 V
.1797 g 1473 1296 M
35 -78 V
.1875 g 1508 1218 M
35 -68 V
.1953 g 1543 1150 M
35 -74 V
.2031 g 1578 1076 M
35 -83 V
.2109 g 1613 993 M
35 -79 V
.2188 g 1648 914 M
35 -70 V
.2266 g 1683 844 M
35 -61 V
.2344 g 1718 783 M
35 -31 V
.2422 g 1753 752 M
35 111 V
.25 g 1788 863 M
35 244 V
.2578 g 1823 1107 M
35 302 V
.2656 g 1858 1409 M
35 309 V
.2734 g 1893 1718 M
35 285 V
.2812 g 1928 2003 M
35 269 V
.2891 g 1963 2272 M
35 211 V
.2969 g 1998 2483 M
35 155 V
.3047 g 2033 2638 M
36 78 V
.3125 g 2069 2716 M
35 46 V
.3203 g 2104 2762 M
35 -1 V
.3281 g 2139 2761 M
35 -36 V
.3359 g 2174 2725 M
35 -89 V
.3437 g 2209 2636 M
35 -138 V
.3516 g 2244 2498 M
35 -184 V
.3594 g 2279 2314 M
35 -250 V
.3672 g 2314 2064 M
35 -294 V
.375 g 2349 1770 M
35 -347 V
.3828 g 2384 1423 M
35 -308 V
.3906 g 2419 1115 M
35 -166 V
.3984 g 2454 949 M
35 -94 V
.4063 g 2489 855 M
35 -18 V
.4141 g 2524 837 M
35 29 V
.4219 g 2559 866 M
35 78 V
.4297 g 2594 944 M
35 117 V
.4375 g 2629 1061 M
35 139 V
.4453 g 2664 1200 M
35 112 V
.4531 g 2699 1312 M
35 103 V
.4609 g 2734 1415 M
35 107 V
.4688 g 2769 1522 M
35 84 V
.4766 g 2804 1606 M
35 80 V
.4844 g 2839 1686 M
35 64 V
.4922 g 2874 1750 M
35 72 V
.5 g 2909 1822 M
35 55 V
.5078 g 2944 1877 M
36 51 V
.5156 g 2980 1928 M
35 38 V
.5234 g 3015 1966 M
35 14 V
.5313 g 3050 1980 M
35 1 V
.5391 g 3085 1981 M
35 3 V
.5469 g 3120 1984 M
35 32 V
.5547 g 3155 2016 M
35 42 V
.5625 g 3190 2058 M
35 69 V
.5703 g 3225 2127 M
35 58 V
.5781 g 3260 2185 M
35 45 V
.5859 g 3295 2230 M
35 8 V
.5937 g 3330 2238 M
35 -18 V
.6016 g 3365 2220 M
35 -38 V
.6094 g 3400 2182 M
35 -64 V
.6172 g 3435 2118 M
35 -77 V
.625 g 3470 2041 M
35 -98 V
.6328 g 3505 1943 M
35 -112 V
.6406 g 3540 1831 M
35 -111 V
.6484 g 3575 1720 M
35 -93 V
.6562 g 3610 1627 M
35 -84 V
.6641 g 3645 1543 M
35 -73 V
.6719 g 3680 1470 M
35 -60 V
.6797 g 3715 1410 M
35 -68 V
.6875 g 3750 1342 M
35 -59 V
.6953 g 3785 1283 M
35 -66 V
.7031 g 3820 1217 M
36 -74 V
.7109 g 3856 1143 M
35 -63 V
.7188 g 3891 1080 M
35 -49 V
.7266 g 3926 1031 M
35 -38 V
.7344 g 3961 993 M
35 -8 V
.7422 g 3996 985 M
35 123 V
.75 g 4031 1108 M
35 246 V
.7578 g 4066 1354 M
35 272 V
.7656 g 4101 1626 M
35 264 V
.7734 g 4136 1890 M
35 234 V
.7813 g 4171 2124 M
35 218 V
.7891 g 4206 2342 M
35 166 V
.7969 g 4241 2508 M
35 129 V
.8047 g 4276 2637 M
35 78 V
.8125 g 4311 2715 M
35 46 V
.8203 g 4346 2761 M
35 -1 V
.8281 g 4381 2760 M
35 -35 V
.8359 g 4416 2725 M
35 -90 V
.8438 g 4451 2635 M
35 -138 V
.8516 g 4486 2497 M
35 -183 V
.8594 g 4521 2314 M
35 -250 V
.8672 g 4556 2064 M
35 -295 V
.875 g 4591 1769 M
35 -347 V
.8828 g 4626 1422 M
35 -308 V
.8906 g 4661 1114 M
35 -166 V
.8984 g 4696 948 M
35 -94 V
.9062 g 4731 854 M
36 -18 V
.9141 g 4767 836 M
35 30 V
.9219 g 4802 866 M
35 78 V
.9297 g 4837 944 M
35 117 V
.9375 g 4872 1061 M
35 138 V
.9453 g 4907 1199 M
35 112 V
.9531 g 4942 1311 M
35 104 V
.9609 g 4977 1415 M
35 107 V
.9687 g 5012 1522 M
35 84 V
.9766 g 5047 1606 M
35 80 V
.9844 g 5082 1686 M
35 64 V
stroke 5117 1750 M
.9922 g 5117 1750 M
35 72 V
1 g 5152 1822 M
35 54 V
.0078 g 737 1927 Pls
.0156 g 772 1965 Pls
.0234 g 807 1979 Pls
.0312 g 842 1980 Pls
.0391 g 877 1983 Pls
.0469 g 912 2015 Pls
.0547 g 947 2057 Pls
.0625 g 982 2126 Pls
.0703 g 1017 2184 Pls
.0781 g 1052 2229 Pls
.0859 g 1087 2237 Pls
.0937 g 1122 2218 Pls
.1016 g 1158 2180 Pls
.1094 g 1193 2111 Pls
.1172 g 1228 2021 Pls
.125 g 1263 1904 Pls
.1328 g 1298 1776 Pls
.1406 g 1333 1649 Pls
.1484 g 1368 1540 Pls
.1563 g 1403 1444 Pls
.1641 g 1438 1361 Pls
.1719 g 1473 1296 Pls
.1797 g 1508 1218 Pls
.1875 g 1543 1150 Pls
.1953 g 1578 1076 Pls
.2031 g 1613 993 Pls
.2109 g 1648 914 Pls
.2188 g 1683 844 Pls
.2266 g 1718 783 Pls
.2344 g 1753 752 Pls
.2422 g 1788 863 Pls
.25 g 1823 1107 Pls
.2578 g 1858 1409 Pls
.2656 g 1893 1718 Pls
.2734 g 1928 2003 Pls
.2812 g 1963 2272 Pls
.2891 g 1998 2483 Pls
.2969 g 2033 2638 Pls
.3047 g 2069 2716 Pls
.3125 g 2104 2762 Pls
.3203 g 2139 2761 Pls
.3281 g 2174 2725 Pls
.3359 g 2209 2636 Pls
.3437 g 2244 2498 Pls
.3516 g 2279 2314 Pls
.3594 g 2314 2064 Pls
.3672 g 2349 1770 Pls
.375 g 2384 1423 Pls
.3828 g 2419 1115 Pls
.3906 g 2454 949 Pls
.3984 g 2489 855 Pls
.4063 g 2524 837 Pls
.4141 g 2559 866 Pls
.4219 g 2594 944 Pls
.4297 g 2629 1061 Pls
.4375 g 2664 1200 Pls
.4453 g 2699 1312 Pls
.4531 g 2734 1415 Pls
.4609 g 2769 1522 Pls
.4688 g 2804 1606 Pls
.4766 g 2839 1686 Pls
.4844 g 2874 1750 Pls
.4922 g 2909 1822 Pls
.5 g 2944 1877 Pls
.5078 g 2980 1928 Pls
.5156 g 3015 1966 Pls
.5234 g 3050 1980 Pls
.5313 g 3085 1981 Pls
.5391 g 3120 1984 Pls
.5469 g 3155 2016 Pls
.5547 g 3190 2058 Pls
.5625 g 3225 2127 Pls
.5703 g 3260 2185 Pls
.5781 g 3295 2230 Pls
.5859 g 3330 2238 Pls
.5937 g 3365 2220 Pls
.6016 g 3400 2182 Pls
.6094 g 3435 2118 Pls
.6172 g 3470 2041 Pls
.625 g 3505 1943 Pls
.6328 g 3540 1831 Pls
.6406 g 3575 1720 Pls
.6484 g 3610 1627 Pls
.6562 g 3645 1543 Pls
.6641 g 3680 1470 Pls
.6719 g 3715 1410 Pls
.6797 g 3750 1342 Pls
.6875 g 3785 1283 Pls
.6953 g 3820 1217 Pls
.7031 g 3856 1143 Pls
.7109 g 3891 1080 Pls
.7188 g 3926 1031 Pls
.7266 g 3961 993 Pls
.7344 g 3996 985 Pls
.7422 g 4031 1108 Pls
.75 g 4066 1354 Pls
.7578 g 4101 1626 Pls
.7656 g 4136 1890 Pls
.7734 g 4171 2124 Pls
.7813 g 4206 2342 Pls
.7891 g 4241 2508 Pls
.7969 g 4276 2637 Pls
.8047 g 4311 2715 Pls
.8125 g 4346 2761 Pls
.8203 g 4381 2760 Pls
.8281 g 4416 2725 Pls
.8359 g 4451 2635 Pls
.8438 g 4486 2497 Pls
.8516 g 4521 2314 Pls
.8594 g 4556 2064 Pls
.8672 g 4591 1769 Pls
.875 g 4626 1422 Pls
.8828 g 4661 1114 Pls
.8906 g 4696 948 Pls
.8984 g 4731 854 Pls
.9062 g 4767 836 Pls
.9141 g 4802 866 Pls
.9219 g 4837 944 Pls
.9297 g 4872 1061 Pls
.9375 g 4907 1199 Pls
.9453 g 4942 1311 Pls
.9531 g 4977 1415 Pls
.9609 g 5012 1522 Pls
.9687 g 5047 1606 Pls
.9766 g 5082 1686 Pls
.9844 g 5117 1750 Pls
.9922 g 5152 1822 Pls
1 g 5187 1876 Pls
% End plot #1
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
702 2915 N
702 540 L
4541 0 V
0 2375 V
-4541 0 V
Z stroke
stroke gsave	%% draw gray scale smooth box
maxcolors 0 gt {/imax maxcolors def} {/imax 1024 def} ifelse
5357 540 translate 227 2375 scale 0 setlinewidth
/ystep 1 imax div def /y0 0 def /ii 0 def
{ y0 g 0 y0 N 1 0 V 0 ystep V -1 0 f
/y0 y0 ystep add def /ii ii 1 add def
ii imax ge {exit} if } loop
grestore 0 setgray
1.000 UL
LTb
LCb setrgbcolor
5357 540 N
227 0 V
0 2375 V
-227 0 V
0 -2375 V
Z stroke
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
5584 540 M
-63 0 V
stroke
5585 540 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MLshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
5357 540 M
63 0 V
164 687 R
-63 0 V
stroke
5585 1227 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.1)]
] -46.7 MLshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
5357 1227 M
63 0 V
164 687 R
-63 0 V
stroke
5585 1914 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.2)]
] -46.7 MLshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
5357 1914 M
63 0 V
164 687 R
-63 0 V
stroke
5585 2601 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.3)]
] -46.7 MLshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
5357 2601 M
63 0 V
stroke
LCb setrgbcolor
LCb setrgbcolor
6016 1727 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 180.0 0.0 true true 0 (JD )]
[(Symbol) 180.0 0.0 true true 0 (-)]
[(Helvetica) 180.0 0.0 true true 0 ( 2459546.692103)]
] -60.0 MCshow
grestore
/Helvetica findfont 180 scalefont setfont
LTb
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica-Oblique Helvetica
